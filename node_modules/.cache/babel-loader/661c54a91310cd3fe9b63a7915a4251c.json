{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\country\\\\CountryCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { CardMedia } from \"@material-ui/core\";\nimport WeatherInfoModal from \"../weather/WeatherInfoModal\";\nimport { WEATHER_API_ACCESS_KEY, WEATHER_API_BASE_URL } from \"../../utils/constants\";\nimport Axios from \"axios\";\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 275\n  },\n  title: {\n    fontSize: 14\n  },\n  media: {\n    height: 140\n  }\n});\n\nconst CountryCard = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [capitalWeatherInfo, setCapitalWeatherInfo] = useState({});\n  const {\n    country\n  } = props;\n  const classes = useStyles();\n\n  const handleClickOpen = currentCountry => {\n    const apiEndpoint = `current?access_key=${WEATHER_API_ACCESS_KEY}&query=${currentCountry.capital}`;\n    Axios.get(WEATHER_API_BASE_URL + apiEndpoint).then(response => {\n      const {\n        data\n      } = response;\n      setCapitalWeatherInfo(data.current);\n      setOpen(true);\n    }).catch(error => {\n      setOpen(false);\n      alert(ERROR_FETCHING_WEATHER);\n      console.log(error);\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: country.flag,\n          title: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            children: [country.name, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              component: \"p\",\n              color: \"textSecondary\",\n              children: country.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"Capital - \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"Latlong - \", country.latlng[0] + \", \" + country.latlng[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"Population - \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClickOpen(country),\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          children: \"Capital Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherInfoModal, {\n      open: open,\n      handleClose: handleClose,\n      capitalWeatherInfo: capitalWeatherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountryCard, \"o7htS9Gg5QxGj2qlkxkKTMO3Eus=\", false, function () {\n  return [useStyles];\n});\n\n_c = CountryCard;\nexport default CountryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryCard\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/country/CountryCard.tsx"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Button","Typography","CardActionArea","CardMedia","WeatherInfoModal","WEATHER_API_ACCESS_KEY","WEATHER_API_BASE_URL","Axios","ERROR_FETCHING_WEATHER","useStyles","root","maxWidth","title","fontSize","media","height","CountryCard","props","open","setOpen","capitalWeatherInfo","setCapitalWeatherInfo","country","classes","handleClickOpen","currentCountry","apiEndpoint","capital","get","then","response","data","current","catch","error","alert","console","log","handleClose","flag","name","latlng","population"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport { CardMedia } from \"@material-ui/core\";\r\nimport WeatherInfoModal from \"../weather/WeatherInfoModal\";\r\nimport { WEATHER_API_ACCESS_KEY, WEATHER_API_BASE_URL } from \"../../utils/constants\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\r\nimport { CountriesData } from \"../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\ninterface CountryCardProp{\r\n    country : CountriesData\r\n}\r\n\r\nexport interface Request {\r\n    type: string;\r\n    query: string;\r\n    language: string;\r\n    unit: string;\r\n}\r\n\r\nexport interface Location {\r\n    name: string;\r\n    country: string;\r\n    region: string;\r\n    lat: string;\r\n    lon: string;\r\n    timezone_id: string;\r\n    localtime: string;\r\n    localtime_epoch: number;\r\n    utc_offset: string;\r\n}\r\n\r\nexport interface Current {\r\n    observation_time: string;\r\n    temperature: number;\r\n    weather_code: number;\r\n    weather_icons: string[];\r\n    weather_descriptions: string[];\r\n    wind_speed: number;\r\n    wind_degree: number;\r\n    wind_dir: string;\r\n    pressure: number;\r\n    precip: number;\r\n    humidity: number;\r\n    cloudcover: number;\r\n    feelslike: number;\r\n    uv_index: number;\r\n    visibility: number;\r\n    is_day: string;\r\n}\r\n\r\nexport interface WeatherData {\r\n    request: Request;\r\n    location: Location;\r\n    current: Current;\r\n}\r\n\r\nconst CountryCard = (props :CountryCardProp) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [capitalWeatherInfo, setCapitalWeatherInfo] = useState<Current>({} as Current);\r\n    const { country } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = (currentCountry: CountriesData) => {\r\n        const apiEndpoint = `current?access_key=${WEATHER_API_ACCESS_KEY}&query=${currentCountry.capital}`;\r\n        Axios.get(WEATHER_API_BASE_URL + apiEndpoint)\r\n            .then((response : AxiosResponse<WeatherData> ) => {\r\n                const { data } = response;\r\n                setCapitalWeatherInfo(data.current);\r\n                setOpen(true);\r\n            })\r\n            .catch((error) => {\r\n                setOpen(false);\r\n                alert(ERROR_FETCHING_WEATHER);\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={country.flag}\r\n                        title={country.name}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h6\">\r\n                      {country.name}\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        component=\"p\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        {country.capital}\r\n                      </Typography>\r\n                    </Typography>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                        >\r\n                            Capital - {country.capital}\r\n                        </Typography>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                        >\r\n                            Latlong - {country.latlng[0] + \", \" + country.latlng[1]}\r\n                        </Typography>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                        >\r\n                            Population - {country.population}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button\r\n                        onClick={() => handleClickOpen(country)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                    >\r\n                        Capital Weather\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            <WeatherInfoModal\r\n                open={open}\r\n                handleClose={handleClose}\r\n                capitalWeatherInfo={capitalWeatherInfo}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryCard;\r\n"]},"metadata":{},"sourceType":"module"}