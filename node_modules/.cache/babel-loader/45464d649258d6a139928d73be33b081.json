{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\WeatherInfoModal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    minHeight: 200,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"10px auto\"\n  },\n  loader: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  centerContent: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  }\n}));\n\nconst WeatherInfoModal = props => {\n  _s();\n\n  var _capitalWeatherInfo$c;\n\n  const {\n    open,\n    handleClose,\n    capitalWeatherInfo\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      disableTypography: true,\n      id: \"customized-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.centerContent,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: capitalWeatherInfo.location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), (_capitalWeatherInfo$c = capitalWeatherInfo.current.weather_icons) === null || _capitalWeatherInfo$c === void 0 ? void 0 : _capitalWeatherInfo$c.map(weatherIconUrl => {\n        return /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\" // className={classes.rounded}\n          ,\n          src: weatherIconUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\n        ;\n      }), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: [\"Temperature : \", capitalWeatherInfo.current.temperature + \"Â°\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: [\"Wind Speed : \", capitalWeatherInfo.current.wind_speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: [\"Precipitation : \", capitalWeatherInfo.current.precip, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button // fullWidth\n      , {\n        variant: \"contained\",\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        className: classes.centerContent,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherInfoModal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = WeatherInfoModal;\nexport default WeatherInfoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfoModal\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/WeatherInfoModal/index.tsx"],"names":["React","Button","Dialog","Typography","DialogTitle","DialogContent","DialogActions","makeStyles","Avatar","IconButton","CloseIcon","useStyles","theme","root","maxWidth","minHeight","justifyContent","alignItems","margin","loader","display","closeButton","position","right","spacing","top","color","palette","grey","centerContent","flexDirection","WeatherInfoModal","props","open","handleClose","capitalWeatherInfo","classes","location","name","current","weather_icons","map","weatherIconUrl","temperature","wind_speed","precip"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { ICapitalWeatherInfo } from \"app/utils/interfaces/weather\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    maxWidth: 345,\n    minHeight: 200,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"10px auto\",\n  },\n  loader: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  centerContent: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n}));\n\ninterface WeatherInfoModalProps {\n  open: boolean;\n  capitalWeatherInfo: ICapitalWeatherInfo;\n  handleClose: () => void;\n}\n\nconst WeatherInfoModal: React.FC<WeatherInfoModalProps> = (\n  props: WeatherInfoModalProps\n) => {\n  const { open, handleClose, capitalWeatherInfo } = props;\n  const classes = useStyles();\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      fullWidth={true}\n      maxWidth={\"sm\"}\n    >\n      <DialogTitle disableTypography id=\"customized-dialog-title\">\n        <Typography variant=\"h6\">Weather Information</Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        {/* <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={handleClose}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton> */}\n      </DialogTitle>\n      <DialogContent dividers className={classes.centerContent}>\n        <Typography variant=\"h4\">{capitalWeatherInfo.location.name}</Typography>\n        {capitalWeatherInfo.current.weather_icons?.map(\n          (weatherIconUrl: any) => {\n            return (\n              <Avatar\n                variant=\"rounded\"\n                // className={classes.rounded}\n                src={weatherIconUrl}\n              />\n              //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\n            );\n          }\n        )}\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          Temperature : {capitalWeatherInfo.current.temperature + \"Â°\"}\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          Wind Speed : {capitalWeatherInfo.current.wind_speed} km/h\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          Precipitation : {capitalWeatherInfo.current.precip} %\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          // fullWidth\n          variant=\"contained\"\n          autoFocus\n          onClick={handleClose}\n          color=\"primary\"\n          className={classes.centerContent}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WeatherInfoModal;\n"]},"metadata":{},"sourceType":"module"}