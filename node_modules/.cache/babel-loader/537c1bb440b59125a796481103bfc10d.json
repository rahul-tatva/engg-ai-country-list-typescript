{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\country\\\\CountryCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { CardMedia } from \"@material-ui/core\";\nimport WeatherInfoModal from \"../weather/WeatherInfoModal\";\nimport { WEATHER_API_ACCESS_KEY, WEATHER_API_BASE_URL } from \"../../utils/constants\";\nimport Axios from \"axios\";\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 275\n  },\n  title: {\n    fontSize: 14\n  },\n  media: {\n    height: 140\n  }\n});\n\nconst CountryCard = props => {\n  _s();\n\n  const [openModal, setOpenModal] = React.useState(false);\n  const [capitalWeatherInfo, setCapitalWeatherInfo] = useState({});\n  const {\n    country\n  } = props;\n  const classes = useStyles();\n\n  const handleClickOpen = currentCountry => {\n    const apiEndpoint = `current?access_key=${WEATHER_API_ACCESS_KEY}&query=${currentCountry.capital}`;\n    Axios.get(WEATHER_API_BASE_URL + apiEndpoint).then(response => {\n      const {\n        data\n      } = response;\n      debugger;\n      setCapitalWeatherInfo(data);\n      setOpenModal(true);\n    }).catch(error => {\n      alert(ERROR_FETCHING_WEATHER);\n      console.log(error);\n    });\n  };\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: country.flag,\n          title: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            children: [country.name, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              component: \"p\",\n              color: \"textSecondary\",\n              children: country.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Population - \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Latitude, Longitude :\", \" \", country.latlng[0] + \"°  \" + country.latlng[1] + \"°\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClickOpen(country),\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          children: \"Capital Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), openModal && /*#__PURE__*/_jsxDEV(WeatherInfoModal, {\n      open: openModal,\n      handleClose: handleClose,\n      capitalWeatherInfo: capitalWeatherInfo2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryCard, \"eyQUn7CBrgXZK/AQW63RBJSCBok=\", false, function () {\n  return [useStyles];\n});\n\n_c = CountryCard;\nexport default CountryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryCard\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/country/CountryCard.tsx"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Button","Typography","CardActionArea","CardMedia","WeatherInfoModal","WEATHER_API_ACCESS_KEY","WEATHER_API_BASE_URL","Axios","ERROR_FETCHING_WEATHER","useStyles","root","maxWidth","title","fontSize","media","height","CountryCard","props","openModal","setOpenModal","capitalWeatherInfo","setCapitalWeatherInfo","country","classes","handleClickOpen","currentCountry","apiEndpoint","capital","get","then","response","data","catch","error","alert","console","log","handleClose","flag","name","population","latlng","capitalWeatherInfo2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport { CardMedia } from \"@material-ui/core\";\r\nimport WeatherInfoModal from \"../weather/WeatherInfoModal\";\r\nimport {\r\n  WEATHER_API_ACCESS_KEY,\r\n  WEATHER_API_BASE_URL,\r\n} from \"../../utils/constants\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\r\nimport { CountriesData } from \"../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\ninterface CountryCardProp {\r\n  country: CountriesData;\r\n}\r\n\r\nexport interface Request {\r\n  type: string;\r\n  query: string;\r\n  language: string;\r\n  unit: string;\r\n}\r\n\r\nexport interface Location {\r\n  name: string;\r\n  country: string;\r\n  region: string;\r\n  lat: string;\r\n  lon: string;\r\n  timezone_id: string;\r\n  localtime: string;\r\n  localtime_epoch: number;\r\n  utc_offset: string;\r\n}\r\n\r\nexport interface Current {\r\n  observation_time: string;\r\n  temperature: number;\r\n  weather_code: number;\r\n  weather_icons: string[];\r\n  weather_descriptions: string[];\r\n  wind_speed: number;\r\n  wind_degree: number;\r\n  wind_dir: string;\r\n  pressure: number;\r\n  precip: number;\r\n  humidity: number;\r\n  cloudcover: number;\r\n  feelslike: number;\r\n  uv_index: number;\r\n  visibility: number;\r\n  is_day: string;\r\n}\r\n\r\nexport interface WeatherData {\r\n  request: Request;\r\n  location: Location;\r\n  current: Current;\r\n}\r\n\r\nconst CountryCard = (props: CountryCardProp) => {\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [capitalWeatherInfo, setCapitalWeatherInfo] = useState<WeatherData>(\r\n    {} as Current\r\n  );\r\n  const { country } = props;\r\n  const classes = useStyles();\r\n  const handleClickOpen = (currentCountry: CountriesData) => {\r\n    const apiEndpoint = `current?access_key=${WEATHER_API_ACCESS_KEY}&query=${currentCountry.capital}`;\r\n    Axios.get(WEATHER_API_BASE_URL + apiEndpoint)\r\n      .then((response: AxiosResponse<WeatherData>) => {\r\n        const { data } = response;\r\n        debugger;\r\n        setCapitalWeatherInfo(data);\r\n        setOpenModal(true);\r\n      })\r\n      .catch((error) => {\r\n        alert(ERROR_FETCHING_WEATHER);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={country.flag}\r\n            title={country.name}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              {country.name}\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                component=\"p\"\r\n                color=\"textSecondary\"\r\n              >\r\n                {country.capital}\r\n              </Typography>\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Population - {country.population}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Latitude, Longitude :{\" \"}\r\n              {country.latlng[0] + \"°  \" + country.latlng[1] + \"°\"}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => handleClickOpen(country)}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Capital Weather\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {/* review this thing */}\r\n      {openModal && (\r\n        <WeatherInfoModal\r\n          open={openModal}\r\n          handleClose={handleClose}\r\n          capitalWeatherInfo={capitalWeatherInfo2}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n"]},"metadata":{},"sourceType":"module"}