{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/engg-ai-country-list-typescript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/engg-ai-country-list-typescript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Projects/engg-ai-country-list-typescript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{CircularProgress,Container,Grid,makeStyles,Typography}from\"@material-ui/core\";import countryService from\"app/services/country-service\";import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router\";import CountryCard from\"app/components/CountryCard\";import{ERROR_FETCHING_COUNTRIES}from\"app/utils/messages\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{cardGrid:{paddingTop:theme.spacing(8),paddingBottom:theme.spacing(8)}};});var CountryList=function CountryList(){var classes=useStyles();var _useParams=useParams(),countryName=_useParams.countryName;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),countries=_useState4[0],setCountries=_useState4[1];var getCountries=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return countryService.getByName(countryName);case 3:result=_context.sent;if(result.data){setCountries(result.data);}_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:_context.prev=9;setLoading(false);return _context.finish(9);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,7,9,12]]);}));return function getCountries(){return _ref.apply(this,arguments);};}();useEffect(function(){getCountries();},[]);return/*#__PURE__*/_jsx(Container,{className:classes.cardGrid,maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,justifyContent:\"center\",children:[loading&&/*#__PURE__*/_jsx(CircularProgress,{size:60}),countries.map(function(country){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(CountryCard,{country:country})},country.alpha2Code);}),!loading&&countries.length===0&&/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",children:ERROR_FETCHING_COUNTRIES})]})});};export default CountryList;","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/CountryList/index.tsx"],"names":["CircularProgress","Container","Grid","makeStyles","Typography","countryService","React","useEffect","useState","useParams","CountryCard","ERROR_FETCHING_COUNTRIES","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","CountryList","classes","countryName","loading","setLoading","countries","setCountries","getCountries","getByName","result","data","map","country","alpha2Code","length"],"mappings":"meAAA,OACEA,gBADF,CAEEC,SAFF,CAGEC,IAHF,CAIEC,UAJF,CAKEC,UALF,KAMO,mBANP,CAOA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CAEA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,OAASC,wBAAT,KAAyC,oBAAzC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,SAACU,KAAD,QAAY,CACvCC,QAAQ,CAAE,CACRC,UAAU,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ,CAERC,aAAa,CAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFP,CAD6B,CAAZ,EAAD,CAA5B,CAOA,GAAME,CAAAA,WAAqB,CAAG,QAAxBA,CAAAA,WAAwB,EAAM,CAClC,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CADkC,eAEVH,SAAS,EAFC,CAE1BW,WAF0B,YAE1BA,WAF0B,eAGJZ,QAAQ,CAAC,IAAD,CAHJ,wCAG3Ba,OAH2B,eAGlBC,UAHkB,8BAIAd,QAAQ,CAAa,EAAb,CAJR,yCAI3Be,SAJ2B,eAIhBC,YAJgB,eAMlC,GAAMC,CAAAA,YAAY,0FAAG,oLAGIpB,CAAAA,cAAc,CAACqB,SAAf,CAAyBN,WAAzB,CAHJ,QAGXO,MAHW,eAIjB,GAAIA,MAAM,CAACC,IAAX,CAAiB,CACfJ,YAAY,CAACG,MAAM,CAACC,IAAR,CAAZ,CACD,CANgB,qGAUjBN,UAAU,CAAC,KAAD,CAAV,CAViB,mGAAH,kBAAZG,CAAAA,YAAY,0CAAlB,CAaAlB,SAAS,CAAC,UAAM,CACdkB,YAAY,GACb,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,KAAC,SAAD,EAAW,SAAS,CAAEN,OAAO,CAACL,QAA9B,CAAwC,QAAQ,CAAC,IAAjD,uBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,cAAc,CAAC,QAA3C,WACGO,OAAO,eAAI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADd,CAGGE,SAAS,CAACM,GAAV,CAAc,SAACC,OAAD,CAAuB,CACpC,mBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAoC,EAAE,CAAE,EAAxC,CAA4C,EAAE,CAAE,CAAhD,CAAmD,EAAE,CAAE,CAAvD,uBACE,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,EADF,EAAgBA,OAAO,CAACC,UAAxB,CADF,CAKD,CANA,CAHH,CAUG,CAACV,OAAD,EAAYE,SAAS,CAACS,MAAV,GAAqB,CAAjC,eACC,KAAC,UAAD,EAAY,YAAY,KAAxB,CAAyB,OAAO,CAAC,IAAjC,UACGrB,wBADH,EAXJ,GADF,EADF,CAoBD,CA3CD,CA6CA,cAAeO,CAAAA,WAAf","sourcesContent":["import {\n  CircularProgress,\n  Container,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport countryService from \"app/services/country-service\";\nimport { ICountry } from \"app/utils/interfaces/country\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport CountryCard from \"app/components/CountryCard\";\nimport { ERROR_FETCHING_COUNTRIES } from \"app/utils/messages\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nconst CountryList: React.FC = () => {\n  const classes = useStyles();\n  const { countryName } = useParams<{ countryName: string }>();\n  const [loading, setLoading] = useState(true);\n  const [countries, setCountries] = useState<ICountry[]>([]);\n\n  const getCountries = async () => {\n    try {\n      // setLoading(true);\n      const result = await countryService.getByName(countryName);\n      if (result.data) {\n        setCountries(result.data);\n      }\n    } catch (e) {\n      // alert(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <Grid container spacing={4} justifyContent=\"center\">\n        {loading && <CircularProgress size={60} />}\n\n        {countries.map((country: ICountry) => {\n          return (\n            <Grid item key={country.alpha2Code} xs={12} sm={6} md={4}>\n              <CountryCard country={country} />\n            </Grid>\n          );\n        })}\n        {!loading && countries.length === 0 && (\n          <Typography gutterBottom variant=\"h6\">\n            {ERROR_FETCHING_COUNTRIES}\n          </Typography>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CountryList;\n"]},"metadata":{},"sourceType":"module"}