{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\CountryList\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport http from \"../../services/http.service\";\nimport CountryCard from \"../CountryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  }\n}));\n\nconst CountryList = () => {\n  _s();\n\n  const classes = useStyles();\n  const locationParams = useParams();\n  const [loading, setLoading] = useState(false);\n  const [countries, setCountries] = useState([]);\n  console.log(locationParams);\n  useEffect(() => {\n    // call api with country name\n    http.get(`name/all`).then(response => {\n      debugger;\n      setLoading(true);\n      setCountries(response.data);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        justify: \"center\",\n        children: countries.map(country => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(CountryCard, {\n              country: country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, country.alpha2Code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryList, \"5ZLiAZ3iMRT4oadVcRp0L95BRaU=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/CountryList/index.tsx"],"names":["Container","Grid","makeStyles","React","useEffect","useState","useParams","http","CountryCard","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","CountryList","classes","locationParams","loading","setLoading","countries","setCountries","console","log","get","then","response","data","catch","error","map","country","alpha2Code"],"mappings":";;;AAAA,SAEEA,SAFF,EAGEC,IAHF,EAIEC,UAJF,QAMO,mBANP;AAQA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAsBC,SAAtB,QAAuC,cAAvC;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAERC,IAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP;AAD6B,CAAZ,CAAD,CAA5B;;AAWA,MAAME,WAAqB,GAAG,MAAM;AAAA;;AAClC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,cAAc,GAAGX,SAAS,EAAhC;AAGA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAQ,EAAR,CAA1C;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,IAAI,CACDiB,GADH,CACQ,UADR,EAEGC,IAFH,CAESC,QAAD,IAA8C;AAClD;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAgB;AACrBV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KAVH;AAWD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEb,OAAO,CAACL,QAA9B;AAAwC,MAAA,QAAQ,EAAC,IAAjD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAC,QAApC;AAAA,kBAKGS,SAAS,CAACU,GAAV,CAAeC,OAAD,IAAa;AAC1B,8BACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAoC,YAAA,EAAE,EAAE,EAAxC;AAA4C,YAAA,EAAE,EAAE,CAAhD;AAAmD,YAAA,EAAE,EAAE,CAAvD;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF,aAAgBA,OAAO,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA3CD;;GAAMjB,W;UACYN,S,EACOH,S;;;KAFnBS,W;AA6CN,eAAeA,WAAf","sourcesContent":["import {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router\";\r\nimport { CountriesData } from \"../../App\";\r\nimport http from \"../../services/http.service\";\r\nimport CountryCard from \"../CountryCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\ninterface CountryListProp {\r\n  countriesList: CountriesData[];\r\n}\r\n\r\nconst CountryList: React.FC = () => {\r\n  const classes = useStyles();\r\n  const locationParams = useParams<{\r\n    countryName: string;\r\n  }>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [countries, setCountries] = useState<any[]>([]);\r\n  console.log(locationParams);\r\n\r\n  useEffect(() => {\r\n    // call api with country name\r\n    http\r\n      .get(`name/all`)\r\n      .then((response: AxiosResponse<CountriesData[]>) => {\r\n        debugger;\r\n        setLoading(true);\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error: any) => {\r\n        setLoading(false);\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4} justify=\"center\">\r\n          {/* {loading && <CircularProgress size={60} />}\r\n          <Typography gutterBottom variant=\"h6\">\r\n            No data found!\r\n          </Typography> */}\r\n          {countries.map((country) => {\r\n            return (\r\n              <Grid item key={country.alpha2Code} xs={12} sm={6} md={4}>\r\n                <CountryCard country={country} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"]},"metadata":{},"sourceType":"module"}