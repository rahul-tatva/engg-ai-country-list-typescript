[{"D:\\Projects\\engg-ai-country-list-typescript\\src\\index.tsx":"1","D:\\Projects\\engg-ai-country-list-typescript\\src\\reportWebVitals.ts":"2","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\App.tsx":"3","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\services\\http.service.ts":"4","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\utils\\messages.ts":"5","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\CountrySearchForm\\index.tsx":"6","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\CountryList\\index.tsx":"7","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\CountryCard\\index.tsx":"8","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\WeatherInfoModal\\index.tsx":"9","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\Navbar\\index.tsx":"10","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\services\\country-service.ts":"11","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\utils\\enums\\routes.ts":"12","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\utils\\constants\\index.ts":"13","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\services\\weather-service.ts":"14"},{"size":504,"mtime":1630046237538,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1630046237559,"results":"17","hashOfConfig":"16"},{"size":701,"mtime":1630051853606,"results":"18","hashOfConfig":"16"},{"size":356,"mtime":1630046237375,"results":"19","hashOfConfig":"16"},{"size":150,"mtime":1630046378730,"results":"20","hashOfConfig":"16"},{"size":1976,"mtime":1630046237283,"results":"21","hashOfConfig":"16"},{"size":1818,"mtime":1630046237230,"results":"22","hashOfConfig":"16"},{"size":3206,"mtime":1630052278467,"results":"23","hashOfConfig":"16"},{"size":3537,"mtime":1630046237340,"results":"24","hashOfConfig":"16"},{"size":517,"mtime":1630002119110,"results":"25","hashOfConfig":"16"},{"size":469,"mtime":1630046237359,"results":"26","hashOfConfig":"16"},{"size":98,"mtime":1630046237425,"results":"27","hashOfConfig":"16"},{"size":217,"mtime":1630010836975,"results":"28","hashOfConfig":"16"},{"size":470,"mtime":1630046237396,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d718ht",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Projects\\engg-ai-country-list-typescript\\src\\index.tsx",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\reportWebVitals.ts",[],["61","62"],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\App.tsx",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\services\\http.service.ts",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\utils\\messages.ts",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\CountrySearchForm\\index.tsx",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\CountryList\\index.tsx",["63"],"import {\n  CircularProgress,\n  Container,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport countryService from \"app/services/country-service\";\nimport { ICountry } from \"app/utils/interfaces/country\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport CountryCard from \"app/components/CountryCard\";\nimport { ERROR_FETCHING_COUNTRIES } from \"app/utils/messages\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nconst CountryList: React.FC = () => {\n  const classes = useStyles();\n  const { countryName } = useParams<{ countryName: string }>();\n  const [loading, setLoading] = useState(true);\n  const [countries, setCountries] = useState<ICountry[]>([]);\n\n  const getCountries = async () => {\n    try {\n      // setLoading(true);\n      const result = await countryService.getByName(countryName);\n      if (result.data) {\n        setCountries(result.data);\n      }\n    } catch (e) {\n      // alert(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <Grid container spacing={4} justifyContent=\"center\">\n        {loading && <CircularProgress size={60} />}\n\n        {countries.map((country: ICountry) => {\n          return (\n            <Grid item key={country.alpha2Code} xs={12} sm={6} md={4}>\n              <CountryCard country={country} />\n            </Grid>\n          );\n        })}\n        {!loading && countries.length === 0 && (\n          <Typography gutterBottom variant=\"h6\">\n            {ERROR_FETCHING_COUNTRIES}\n          </Typography>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CountryList;\n","D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\CountryCard\\index.tsx",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\WeatherInfoModal\\index.tsx",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\components\\Navbar\\index.tsx",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\services\\country-service.ts",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\utils\\enums\\routes.ts",[],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\utils\\constants\\index.ts",[],["64","65"],"D:\\Projects\\engg-ai-country-list-typescript\\src\\app\\services\\weather-service.ts",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":43,"column":6,"nodeType":"72","endLine":43,"endColumn":8,"suggestions":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCountries'. Either include it or remove the dependency array.","ArrayExpression",["78"],["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [getCountries]",{"range":"81","text":"82"},[1159,1161],"[getCountries]"]