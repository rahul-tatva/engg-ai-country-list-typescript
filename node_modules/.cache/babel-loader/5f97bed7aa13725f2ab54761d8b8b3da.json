{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\weather\\\\WeatherInfoModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    minHeight: 200,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"10px auto\"\n  },\n  loader: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\n\nconst WeatherInfoModal = props => {\n  _s();\n\n  var _capitalWeatherInfo$c;\n\n  const {\n    open,\n    handleClose,\n    capitalWeatherInfo\n  } = props;\n  const classes = useStyles();\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        children: \"Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: capitalWeatherInfo.location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), (_capitalWeatherInfo$c = capitalWeatherInfo.current.weather_icons) === null || _capitalWeatherInfo$c === void 0 ? void 0 : _capitalWeatherInfo$c.map(weatherIconUrl => {\n          return /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"rounded\" // className={classes.rounded}\n            ,\n            src: weatherIconUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this) //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\n          ;\n        }), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: [\"Temperature : \", capitalWeatherInfo.current.temperature + \"°\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: [\"Wind Speed : \", capitalWeatherInfo.current.wind_speed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: [\"Precipitation : \", capitalWeatherInfo.current.precip, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherInfoModal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = WeatherInfoModal;\nexport default WeatherInfoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfoModal\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/weather/WeatherInfoModal.tsx"],"names":["React","Button","Dialog","Typography","DialogTitle","DialogContent","DialogActions","Avatar","makeStyles","useStyles","root","maxWidth","minHeight","justifyContent","alignItems","margin","loader","display","WeatherInfoModal","props","open","handleClose","capitalWeatherInfo","classes","location","name","current","weather_icons","map","weatherIconUrl","temperature","wind_speed","precip"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { Current } from \"../country/CountryCard\";\r\nimport { Avatar, makeStyles } from \"@material-ui/core\";\r\n\r\ninterface WeatherInfoModalProps {\r\n  open: boolean;\r\n  //   capitalWeatherInfo: Current;\r\n  capitalWeatherInfo: any;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    minHeight: 200,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"10px auto\",\r\n  },\r\n  loader: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst WeatherInfoModal = (props: WeatherInfoModalProps) => {\r\n  const { open, handleClose, capitalWeatherInfo } = props;\r\n  const classes = useStyles();\r\n  debugger;\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">\r\n          Weather Information\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography variant=\"h4\">\r\n            {capitalWeatherInfo.location.name}\r\n          </Typography>\r\n          {capitalWeatherInfo.current.weather_icons?.map((weatherIconUrl: any) => {\r\n            return (\r\n              <Avatar\r\n                variant=\"rounded\"\r\n                // className={classes.rounded}\r\n                src={weatherIconUrl}\r\n              />\r\n              //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\r\n            );\r\n          })}\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Temperature : {capitalWeatherInfo.current.temperature + \"°\"}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Wind Speed : {capitalWeatherInfo.current.wind_speed} km/h\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Precipitation : {capitalWeatherInfo.current.precip} %\r\n          </Typography>\r\n\r\n          {/* <Typography gutterBottom>\r\n              Temperature - {capitalWeatherInfo.temperature}\r\n            </Typography> */}\r\n          {/* <Typography gutterBottom>\r\n              Wind Speed - {capitalWeatherInfo.wind_speed}\r\n            </Typography> */}\r\n          {/* <Typography gutterBottom>\r\n              Precip - {capitalWeatherInfo.precip}\r\n            </Typography> */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            autoFocus\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfoModal;\r\n"]},"metadata":{},"sourceType":"module"}