{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\CountryCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { CardMedia } from \"@material-ui/core\";\nimport WeatherInfoModal from \"app/components/WeatherInfoModal\";\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\nimport weatherService from \"app/services/weather-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 275\n  },\n  title: {\n    fontSize: 14\n  },\n  media: {\n    height: 140\n  }\n});\n\nconst CountryCard = props => {\n  _s();\n\n  const {\n    country\n  } = props;\n  const classes = useStyles();\n  const [openModal, setOpenModal] = React.useState(false);\n  const [capitalWeatherInfo, setCapitalWeatherInfo] = useState({});\n\n  const handleGetCapitalWeatherInfo = async currentCountry => {\n    try {\n      const result = await weatherService.getWeatherByCity(currentCountry.capital);\n\n      if (result.data) {\n        setCapitalWeatherInfo(result.data);\n        setOpenModal(true);\n      }\n    } catch (e) {\n      alert(e);\n      alert(ERROR_FETCHING_WEATHER);\n    } finally {}\n  };\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: country.flag,\n          title: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            children: [country.name, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              component: \"p\",\n              color: \"textSecondary\",\n              children: country.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Population : \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"Latitude, Longitude :\", \" \", country.latlng[0] + \"°  \" + country.latlng[1] + \"°\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleGetCapitalWeatherInfo(country),\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          children: \"Capital Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), openModal && /*#__PURE__*/_jsxDEV(WeatherInfoModal, {\n      open: openModal,\n      handleClose: handleClose,\n      capitalWeatherInfo: capitalWeatherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountryCard, \"X7kNjElsgGlcApwfb0Gvh5PRuok=\", false, function () {\n  return [useStyles];\n});\n\n_c = CountryCard;\nexport default CountryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryCard\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/CountryCard/index.tsx"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Button","Typography","CardActionArea","CardMedia","WeatherInfoModal","ERROR_FETCHING_WEATHER","weatherService","useStyles","root","maxWidth","title","fontSize","media","height","CountryCard","props","country","classes","openModal","setOpenModal","capitalWeatherInfo","setCapitalWeatherInfo","handleGetCapitalWeatherInfo","currentCountry","result","getWeatherByCity","capital","data","e","alert","handleClose","flag","name","population","latlng"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { CardMedia } from \"@material-ui/core\";\nimport WeatherInfoModal from \"app/components/WeatherInfoModal\";\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\nimport { ICountry } from \"app/utils/interfaces/country\";\nimport { ICapitalWeatherInfo } from \"app/utils/interfaces/weather\";\nimport weatherService from \"app/services/weather-service\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  media: {\n    height: 140,\n  },\n});\n\ninterface CountryCardProps {\n  country: ICountry;\n}\n\nconst CountryCard = (props: CountryCardProps) => {\n  const { country } = props;\n  const classes = useStyles();\n  const [openModal, setOpenModal] = React.useState(false);\n  const [capitalWeatherInfo, setCapitalWeatherInfo] =\n    useState<ICapitalWeatherInfo>({} as ICapitalWeatherInfo);\n\n  const handleGetCapitalWeatherInfo = async (currentCountry: ICountry) => {\n    try {\n      const result = await weatherService.getWeatherByCity(\n        currentCountry.capital\n      );\n      if (result.data) {\n        setCapitalWeatherInfo(result.data);\n        setOpenModal(true);\n      }\n    } catch (e) {\n      alert(e);\n      alert(ERROR_FETCHING_WEATHER);\n    } finally {\n    }\n  };\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={country.flag}\n            title={country.name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\">\n              {country.name}\n              <Typography\n                variant=\"subtitle1\"\n                component=\"p\"\n                color=\"textSecondary\"\n              >\n                {country.capital}\n              </Typography>\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Population : {country.population}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Latitude, Longitude :{\" \"}\n              {country.latlng[0] + \"°  \" + country.latlng[1] + \"°\"}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            onClick={() => handleGetCapitalWeatherInfo(country)}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Capital Weather\n          </Button>\n        </CardActions>\n      </Card>\n      {/* review this thing */}\n      {openModal && (\n        <WeatherInfoModal\n          open={openModal}\n          handleClose={handleClose}\n          capitalWeatherInfo={capitalWeatherInfo}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CountryCard;\n"]},"metadata":{},"sourceType":"module"}