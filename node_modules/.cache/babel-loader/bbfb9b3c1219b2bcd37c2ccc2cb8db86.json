{"ast":null,"code":"import React from\"react\";import Button from\"@material-ui/core/Button\";import Dialog from\"@material-ui/core/Dialog\";import Typography from\"@material-ui/core/Typography\";import DialogTitle from\"@material-ui/core/DialogTitle\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogActions from\"@material-ui/core/DialogActions\";import{makeStyles}from\"@material-ui/core\";import Avatar from\"@material-ui/core/Avatar\";import IconButton from\"@material-ui/core/IconButton\";import CloseIcon from\"@material-ui/icons/Close\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{maxWidth:345,minHeight:200,justifyContent:\"center\",alignItems:\"center\",margin:\"10px auto\"},loader:{alignItems:\"center\",display:\"flex\",justifyContent:\"center\"},closeButton:{position:\"absolute\",right:theme.spacing(1),top:theme.spacing(1),color:theme.palette.grey[500]},centerContent:{alignItems:\"center\",display:\"flex\",justifyContent:\"center\",flexDirection:\"column\"}};});var WeatherInfoModal=function WeatherInfoModal(props){var _capitalWeatherInfo$c;var open=props.open,handleClose=props.handleClose,capitalWeatherInfo=props.capitalWeatherInfo;var classes=useStyles();return/*#__PURE__*/_jsxs(Dialog,{onClose:handleClose,\"aria-labelledby\":\"customized-dialog-title\",open:open,fullWidth:true,maxWidth:\"sm\",children:[/*#__PURE__*/_jsxs(DialogTitle,{disableTypography:true,id:\"customized-dialog-title\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Weather Information\"}),/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"close\",className:classes.closeButton,onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsxs(DialogContent,{dividers:true,className:classes.centerContent,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:capitalWeatherInfo.location.name}),(_capitalWeatherInfo$c=capitalWeatherInfo.current.weather_icons)===null||_capitalWeatherInfo$c===void 0?void 0:_capitalWeatherInfo$c.map(function(weatherIconUrl){return/*#__PURE__*/_jsx(Avatar,{variant:\"rounded\"// className={classes.rounded}\n,src:weatherIconUrl})//   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\n;}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"textSecondary\",children:[\"Temperature : \",capitalWeatherInfo.current.temperature+\"°\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"textSecondary\",children:[\"Wind Speed : \",capitalWeatherInfo.current.wind_speed,\" km/h\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",color:\"textSecondary\",children:[\"Precipitation : \",capitalWeatherInfo.current.precip,\" %\"]})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button// fullWidth\n,{variant:\"contained\",autoFocus:true,onClick:handleClose,color:\"primary\",className:classes.centerContent,children:\"Close\"})})]});};export default WeatherInfoModal;","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/WeatherInfoModal/index.tsx"],"names":["React","Button","Dialog","Typography","DialogTitle","DialogContent","DialogActions","makeStyles","Avatar","IconButton","CloseIcon","useStyles","theme","root","maxWidth","minHeight","justifyContent","alignItems","margin","loader","display","closeButton","position","right","spacing","top","color","palette","grey","centerContent","flexDirection","WeatherInfoModal","props","open","handleClose","capitalWeatherInfo","classes","location","name","current","weather_icons","map","weatherIconUrl","temperature","wind_speed","precip"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,OAASC,UAAT,KAAkC,mBAAlC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,QAAmB,CAC9CC,IAAI,CAAE,CACJC,QAAQ,CAAE,GADN,CAEJC,SAAS,CAAE,GAFP,CAGJC,cAAc,CAAE,QAHZ,CAIJC,UAAU,CAAE,QAJR,CAKJC,MAAM,CAAE,WALJ,CADwC,CAQ9CC,MAAM,CAAE,CACNF,UAAU,CAAE,QADN,CAENG,OAAO,CAAE,MAFH,CAGNJ,cAAc,CAAE,QAHV,CARsC,CAa9CK,WAAW,CAAE,CACXC,QAAQ,CAAE,UADC,CAEXC,KAAK,CAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,CAFI,CAGXC,GAAG,CAAEb,KAAK,CAACY,OAAN,CAAc,CAAd,CAHM,CAIXE,KAAK,CAAEd,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAJI,CAbiC,CAmB9CC,aAAa,CAAE,CACbZ,UAAU,CAAE,QADC,CAEbG,OAAO,CAAE,MAFI,CAGbJ,cAAc,CAAE,QAHH,CAIbc,aAAa,CAAE,QAJF,CAnB+B,CAAnB,EAAD,CAA5B,CAiCA,GAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,CACxDC,KADwD,CAErD,8BACKC,CAAAA,IADL,CAC+CD,KAD/C,CACKC,IADL,CACWC,WADX,CAC+CF,KAD/C,CACWE,WADX,CACwBC,kBADxB,CAC+CH,KAD/C,CACwBG,kBADxB,CAEH,GAAMC,CAAAA,OAAO,CAAGzB,SAAS,EAAzB,CACA,mBACE,MAAC,MAAD,EACE,OAAO,CAAEuB,WADX,CAEE,kBAAgB,yBAFlB,CAGE,IAAI,CAAED,IAHR,CAIE,SAAS,CAAE,IAJb,CAKE,QAAQ,CAAE,IALZ,wBAOE,MAAC,WAAD,EAAa,iBAAiB,KAA9B,CAA+B,EAAE,CAAC,yBAAlC,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,iCADF,cAEE,KAAC,UAAD,EACE,aAAW,OADb,CAEE,SAAS,CAAEG,OAAO,CAACf,WAFrB,CAGE,OAAO,CAAEa,WAHX,uBAKE,KAAC,SAAD,IALF,EAFF,GAPF,cAyBE,MAAC,aAAD,EAAe,QAAQ,KAAvB,CAAwB,SAAS,CAAEE,OAAO,CAACP,aAA3C,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,UAA0BM,kBAAkB,CAACE,QAAnB,CAA4BC,IAAtD,EADF,wBAEGH,kBAAkB,CAACI,OAAnB,CAA2BC,aAF9B,gDAEG,sBAA0CC,GAA1C,CACC,SAACC,cAAD,CAAyB,CACvB,mBACE,KAAC,MAAD,EACE,OAAO,CAAC,SACR;AAFF,CAGE,GAAG,CAAEA,cAHP,EAKA;AANF,CAQD,CAVF,CAFH,cAcE,MAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,4BACiBP,kBAAkB,CAACI,OAAnB,CAA2BI,WAA3B,CAAyC,GAD1D,GAdF,cAiBE,MAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,2BACgBR,kBAAkB,CAACI,OAAnB,CAA2BK,UAD3C,WAjBF,cAoBE,MAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,8BACmBT,kBAAkB,CAACI,OAAnB,CAA2BM,MAD9C,QApBF,GAzBF,cAiDE,KAAC,aAAD,wBACE,KAAC,MACC;AADF,EAEE,OAAO,CAAC,WAFV,CAGE,SAAS,KAHX,CAIE,OAAO,CAAEX,WAJX,CAKE,KAAK,CAAC,SALR,CAME,SAAS,CAAEE,OAAO,CAACP,aANrB,mBADF,EAjDF,GADF,CAgED,CArED,CAuEA,cAAeE,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { ICapitalWeatherInfo } from \"app/utils/interfaces/weather\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    maxWidth: 345,\n    minHeight: 200,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"10px auto\",\n  },\n  loader: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  centerContent: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n}));\n\ninterface WeatherInfoModalProps {\n  open: boolean;\n  capitalWeatherInfo: ICapitalWeatherInfo;\n  handleClose: () => void;\n}\n\nconst WeatherInfoModal: React.FC<WeatherInfoModalProps> = (\n  props: WeatherInfoModalProps\n) => {\n  const { open, handleClose, capitalWeatherInfo } = props;\n  const classes = useStyles();\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      fullWidth={true}\n      maxWidth={\"sm\"}\n    >\n      <DialogTitle disableTypography id=\"customized-dialog-title\">\n        <Typography variant=\"h6\">Weather Information</Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        {/* <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={handleClose}\n          aria-label=\"close\"\n        >\n          <CloseIcon />\n        </IconButton> */}\n      </DialogTitle>\n      <DialogContent dividers className={classes.centerContent}>\n        <Typography variant=\"h4\">{capitalWeatherInfo.location.name}</Typography>\n        {capitalWeatherInfo.current.weather_icons?.map(\n          (weatherIconUrl: any) => {\n            return (\n              <Avatar\n                variant=\"rounded\"\n                // className={classes.rounded}\n                src={weatherIconUrl}\n              />\n              //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\n            );\n          }\n        )}\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          Temperature : {capitalWeatherInfo.current.temperature + \"°\"}\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          Wind Speed : {capitalWeatherInfo.current.wind_speed} km/h\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          Precipitation : {capitalWeatherInfo.current.precip} %\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          // fullWidth\n          variant=\"contained\"\n          autoFocus\n          onClick={handleClose}\n          color=\"primary\"\n          className={classes.centerContent}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WeatherInfoModal;\n"]},"metadata":{},"sourceType":"module"}