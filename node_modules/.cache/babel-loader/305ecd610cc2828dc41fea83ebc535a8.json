{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\CountryList\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress, Container, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport countryService from \"app/services/country-service\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport CountryCard from \"app/components/CountryCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  }\n}));\n\nconst CountryList = () => {\n  _s();\n\n  const classes = useStyles();\n  const locationParams = useParams();\n  const [loading, setLoading] = useState(false);\n  const [countries, setCountries] = useState([]);\n\n  const handleCountrySearch = async () => {\n    try {\n      setLoading(true);\n      const result = await countryService.getByName(locationParams.countryName);\n\n      if (result.data) {\n        setCountries(result.data);\n      }\n    } catch (e) {\n      alert(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.cardGrid,\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"center\",\n      children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), countries.map(country => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(CountryCard, {\n            country: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, country.alpha2Code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }), !loading && countries.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        children: \"No data found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryList, \"5ZLiAZ3iMRT4oadVcRp0L95BRaU=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/CountryList/index.tsx"],"names":["CircularProgress","Container","Grid","makeStyles","Typography","countryService","React","useEffect","useState","useParams","CountryCard","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","CountryList","classes","locationParams","loading","setLoading","countries","setCountries","handleCountrySearch","result","getByName","countryName","data","e","alert","map","country","alpha2Code","length"],"mappings":";;;AAAA,SACEA,gBADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,mBANP;AAOA,OAAOC,cAAP,MAA2B,8BAA3B;AAGA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAsBC,SAAtB,QAAuC,cAAvC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAERC,IAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP;AAD6B,CAAZ,CAAD,CAA5B;;AAWA,MAAME,WAAqB,GAAG,MAAM;AAAA;;AAClC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,cAAc,GAAGV,SAAS,EAAhC;AAGA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAa,EAAb,CAA1C;;AAEA,QAAMgB,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACFH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,MAAM,GAAG,MAAMpB,cAAc,CAACqB,SAAf,CAAyBP,cAAc,CAACQ,WAAxC,CAArB;;AACA,UAAIF,MAAM,CAACG,IAAX,EAAiB;AACfL,QAAAA,YAAY,CAACE,MAAM,CAACG,IAAR,CAAZ;AACD;AACF,KAND,CAME,OAAOC,CAAP,EAAU;AACVC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACD,KARD,SAQU;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAZD;;AAaAd,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEW,OAAO,CAACL,QAA9B;AAAwC,IAAA,QAAQ,EAAC,IAAjD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,OAAO,EAAC,QAApC;AAAA,iBACGO,OAAO,iBAAI,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADd,EAGGE,SAAS,CAACS,GAAV,CAAeC,OAAD,IAAuB;AACpC,4BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAoC,UAAA,EAAE,EAAE,EAAxC;AAA4C,UAAA,EAAE,EAAE,CAAhD;AAAmD,UAAA,EAAE,EAAE,CAAvD;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF,WAAgBA,OAAO,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAHH,EAUG,CAACb,OAAD,IAAYE,SAAS,CAACY,MAAV,KAAqB,CAAjC,iBACC,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA3CD;;GAAMjB,W;UACYN,S,EACOF,S;;;KAFnBQ,W;AA6CN,eAAeA,WAAf","sourcesContent":["import {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport countryService from \"app/services/country-service\";\r\nimport { ICountry } from \"app/utils/interfaces/country\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router\";\r\nimport CountryCard from \"app/components/CountryCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\ninterface CountryListProp {\r\n  countriesList: CountriesData[];\r\n}\r\n\r\nconst CountryList: React.FC = () => {\r\n  const classes = useStyles();\r\n  const locationParams = useParams<{\r\n    countryName: string;\r\n  }>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [countries, setCountries] = useState<ICountry[]>([]);\r\n\r\n  const handleCountrySearch = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await countryService.getByName(locationParams.countryName);\r\n      if (result.data) {\r\n        setCountries(result.data);\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n      <Grid container spacing={4} justify=\"center\">\r\n        {loading && <CircularProgress size={60} />}\r\n\r\n        {countries.map((country: ICountry) => {\r\n          return (\r\n            <Grid item key={country.alpha2Code} xs={12} sm={6} md={4}>\r\n              <CountryCard country={country} />\r\n            </Grid>\r\n          );\r\n        })}\r\n        {!loading && countries.length === 0 && (\r\n          <Typography gutterBottom variant=\"h6\">\r\n            No data found!\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"]},"metadata":{},"sourceType":"module"}