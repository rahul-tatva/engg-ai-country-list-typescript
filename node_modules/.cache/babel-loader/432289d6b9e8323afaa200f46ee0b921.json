{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\engg-ai-country-list-typescript\\\\src\\\\app\\\\components\\\\WeatherInfoModal\\\\index.tsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    minHeight: 200,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"10px auto\"\n  },\n  loader: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst WeatherInfoModal = props => {\n  var _capitalWeatherInfo$c;\n\n  const {\n    open,\n    handleClose,\n    capitalWeatherInfo\n  } = props; // const classes = useStyles();\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      disableTypography: true,\n      id: \"customized-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: capitalWeatherInfo.location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), (_capitalWeatherInfo$c = capitalWeatherInfo.current.weather_icons) === null || _capitalWeatherInfo$c === void 0 ? void 0 : _capitalWeatherInfo$c.map(weatherIconUrl => {\n        return /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\" // className={classes.rounded}\n          ,\n          src: weatherIconUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this) //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\n        ;\n      }), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: [\"Temperature : \", capitalWeatherInfo.current.temperature + \"Â°\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: [\"Wind Speed : \", capitalWeatherInfo.current.wind_speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        children: [\"Precipitation : \", capitalWeatherInfo.current.precip, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button // fullWidth\n      , {\n        variant: \"contained\",\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WeatherInfoModal;\nexport default WeatherInfoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfoModal\");","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/WeatherInfoModal/index.tsx"],"names":["React","Button","Dialog","Typography","DialogTitle","DialogContent","DialogActions","makeStyles","Avatar","IconButton","CloseIcon","useStyles","root","maxWidth","minHeight","justifyContent","alignItems","margin","loader","display","closeButton","position","right","theme","spacing","top","color","palette","grey","WeatherInfoModal","props","open","handleClose","capitalWeatherInfo","location","name","current","weather_icons","map","weatherIconUrl","temperature","wind_speed","precip"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { ICapitalWeatherInfo } from \"app/utils/interfaces/weather\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    minHeight: 200,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"10px auto\",\r\n  },\r\n  loader: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\ninterface WeatherInfoModalProps {\r\n  open: boolean;\r\n  capitalWeatherInfo: ICapitalWeatherInfo;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst WeatherInfoModal: React.FC<WeatherInfoModalProps> = (\r\n  props: WeatherInfoModalProps\r\n) => {\r\n  const { open, handleClose, capitalWeatherInfo } = props;\r\n  // const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={open}\r\n      fullWidth={true}\r\n      maxWidth={\"sm\"}\r\n    >\r\n      <DialogTitle disableTypography id=\"customized-dialog-title\">\r\n        <Typography variant=\"h6\">Weather Information</Typography>\r\n        <IconButton aria-label=\"close\" onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {/* <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          onClick={handleClose}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton> */}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"h4\">{capitalWeatherInfo.location.name}</Typography>\r\n        {capitalWeatherInfo.current.weather_icons?.map(\r\n          (weatherIconUrl: any) => {\r\n            return (\r\n              <Avatar\r\n                variant=\"rounded\"\r\n                // className={classes.rounded}\r\n                src={weatherIconUrl}\r\n              />\r\n              //   <img src={weatherIcon} key={weatherIcon} alt=\"weather_icons\" />\r\n            );\r\n          }\r\n        )}\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          Temperature : {capitalWeatherInfo.current.temperature + \"Â°\"}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          Wind Speed : {capitalWeatherInfo.current.wind_speed} km/h\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          Precipitation : {capitalWeatherInfo.current.precip} %\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          // fullWidth\r\n          variant=\"contained\"\r\n          autoFocus\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WeatherInfoModal;\r\n"]},"metadata":{},"sourceType":"module"}