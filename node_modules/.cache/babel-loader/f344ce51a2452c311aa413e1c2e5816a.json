{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/engg-ai-country-list-typescript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/engg-ai-country-list-typescript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Projects/engg-ai-country-list-typescript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Card from\"@material-ui/core/Card\";import CardActions from\"@material-ui/core/CardActions\";import CardContent from\"@material-ui/core/CardContent\";import Button from\"@material-ui/core/Button\";import Typography from\"@material-ui/core/Typography\";import CardActionArea from\"@material-ui/core/CardActionArea\";import{CardMedia}from\"@material-ui/core\";import WeatherInfoModal from\"app/components/WeatherInfoModal\";import{ERROR_FETCHING_WEATHER}from\"../../utils/messages\";import weatherService from\"app/services/weather-service\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles({root:{maxWidth:275},title:{fontSize:14},media:{height:140}});var CountryCard=function CountryCard(props){var country=props.country;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openModal=_useState2[0],setOpenModal=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),capitalWeatherInfo=_useState4[0],setCapitalWeatherInfo=_useState4[1];var handleGetCapitalWeatherInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(currentCountry){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return weatherService.getWeatherByCity(currentCountry.capital);case 3:result=_context.sent;if(result.data){setCapitalWeatherInfo(result.data);setOpenModal(true);}_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);alert(_context.t0);alert(ERROR_FETCHING_WEATHER);case 11:_context.prev=11;return _context.finish(11);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,7,11,13]]);}));return function handleGetCapitalWeatherInfo(_x){return _ref.apply(this,arguments);};}();var handleClose=function handleClose(){return setOpenModal(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{className:classes.root,children:[/*#__PURE__*/_jsxs(CardActionArea,{children:[/*#__PURE__*/_jsx(CardMedia,{className:classes.media,image:country.flag,title:country.name}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,variant:\"h6\",children:[country.name,/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",component:\"p\",color:\"textSecondary\",children:country.capital})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\",children:[\"Population : \",country.population]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\",children:[\"Latitude, Longitude :\",\" \",country.latlng[0]+\"째  \"+country.latlng[1]+\"째\"]})]})]}),/*#__PURE__*/_jsx(CardActions,{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleGetCapitalWeatherInfo(country);},variant:\"contained\",color:\"primary\",size:\"small\",children:\"Capital Weather\"})})]}),openModal&&/*#__PURE__*/_jsx(WeatherInfoModal,{open:openModal,handleClose:handleClose,capitalWeatherInfo:capitalWeatherInfo})]});};export default CountryCard;","map":{"version":3,"sources":["D:/Projects/engg-ai-country-list-typescript/src/app/components/CountryCard/index.tsx"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Button","Typography","CardActionArea","CardMedia","WeatherInfoModal","ERROR_FETCHING_WEATHER","weatherService","useStyles","root","maxWidth","title","fontSize","media","height","CountryCard","props","country","classes","openModal","setOpenModal","capitalWeatherInfo","setCapitalWeatherInfo","handleGetCapitalWeatherInfo","currentCountry","getWeatherByCity","capital","result","data","alert","handleClose","flag","name","population","latlng"],"mappings":"meAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,OAASC,SAAT,KAA0B,mBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,OAASC,sBAAT,KAAuC,sBAAvC,CAGA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGX,UAAU,CAAC,CAC3BY,IAAI,CAAE,CACJC,QAAQ,CAAE,GADN,CADqB,CAI3BC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAJoB,CAO3BC,KAAK,CAAE,CACLC,MAAM,CAAE,GADH,CAPoB,CAAD,CAA5B,CAgBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA6B,IACvCC,CAAAA,OADuC,CAC3BD,KAD2B,CACvCC,OADuC,CAE/C,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CAF+C,cAGbZ,QAAQ,CAAC,KAAD,CAHK,wCAGxCuB,SAHwC,eAG7BC,YAH6B,8BAK7CxB,QAAQ,CAAsB,EAAtB,CALqC,yCAIxCyB,kBAJwC,eAIpBC,qBAJoB,eAO/C,GAAMC,CAAAA,2BAA2B,0FAAG,iBAAOC,cAAP,mKAEXjB,CAAAA,cAAc,CAACkB,gBAAf,CACnBD,cAAc,CAACE,OADI,CAFW,QAE1BC,MAF0B,eAKhC,GAAIA,MAAM,CAACC,IAAX,CAAiB,CACfN,qBAAqB,CAACK,MAAM,CAACC,IAAR,CAArB,CACAR,YAAY,CAAC,IAAD,CAAZ,CACD,CAR+B,+EAUhCS,KAAK,aAAL,CACAA,KAAK,CAACvB,sBAAD,CAAL,CAXgC,8HAAH,kBAA3BiB,CAAAA,2BAA2B,4CAAjC,CAgBA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMV,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAApB,CAEA,mBACE,wCACE,MAAC,IAAD,EAAM,SAAS,CAAEF,OAAO,CAACT,IAAzB,wBACE,MAAC,cAAD,yBACE,KAAC,SAAD,EACE,SAAS,CAAES,OAAO,CAACL,KADrB,CAEE,KAAK,CAAEI,OAAO,CAACc,IAFjB,CAGE,KAAK,CAAEd,OAAO,CAACe,IAHjB,EADF,cAME,MAAC,WAAD,yBACE,MAAC,UAAD,EAAY,YAAY,KAAxB,CAAyB,OAAO,CAAC,IAAjC,WACGf,OAAO,CAACe,IADX,cAEE,KAAC,UAAD,EACE,OAAO,CAAC,WADV,CAEE,SAAS,CAAC,GAFZ,CAGE,KAAK,CAAC,eAHR,UAKGf,OAAO,CAACS,OALX,EAFF,GADF,cAWE,MAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,CAAkD,SAAS,CAAC,GAA5D,2BACgBT,OAAO,CAACgB,UADxB,GAXF,cAcE,MAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,CAAkD,SAAS,CAAC,GAA5D,mCACwB,GADxB,CAEGhB,OAAO,CAACiB,MAAR,CAAe,CAAf,EAAoB,KAApB,CAA4BjB,OAAO,CAACiB,MAAR,CAAe,CAAf,CAA5B,CAAgD,GAFnD,GAdF,GANF,GADF,cA2BE,KAAC,WAAD,wBACE,KAAC,MAAD,EACE,OAAO,CAAE,yBAAMX,CAAAA,2BAA2B,CAACN,OAAD,CAAjC,EADX,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,SAHR,CAIE,IAAI,CAAC,OAJP,6BADF,EA3BF,GADF,CAwCGE,SAAS,eACR,KAAC,gBAAD,EACE,IAAI,CAAEA,SADR,CAEE,WAAW,CAAEW,WAFf,CAGE,kBAAkB,CAAET,kBAHtB,EAzCJ,GADF,CAkDD,CA3ED,CA6EA,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { CardMedia } from \"@material-ui/core\";\nimport WeatherInfoModal from \"app/components/WeatherInfoModal\";\nimport { ERROR_FETCHING_WEATHER } from \"../../utils/messages\";\nimport { ICountry } from \"app/utils/interfaces/country\";\nimport { ICapitalWeatherInfo } from \"app/utils/interfaces/weather\";\nimport weatherService from \"app/services/weather-service\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  media: {\n    height: 140,\n  },\n});\n\ninterface CountryCardProps {\n  country: ICountry;\n}\n\nconst CountryCard = (props: CountryCardProps) => {\n  const { country } = props;\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState(false);\n  const [capitalWeatherInfo, setCapitalWeatherInfo] =\n    useState<ICapitalWeatherInfo>({} as ICapitalWeatherInfo);\n\n  const handleGetCapitalWeatherInfo = async (currentCountry: ICountry) => {\n    try {\n      const result = await weatherService.getWeatherByCity(\n        currentCountry.capital\n      );\n      if (result.data) {\n        setCapitalWeatherInfo(result.data);\n        setOpenModal(true);\n      }\n    } catch (e) {\n      alert(e);\n      alert(ERROR_FETCHING_WEATHER);\n    } finally {\n    }\n  };\n\n  const handleClose = () => setOpenModal(false);\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={country.flag}\n            title={country.name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\">\n              {country.name}\n              <Typography\n                variant=\"subtitle1\"\n                component=\"p\"\n                color=\"textSecondary\"\n              >\n                {country.capital}\n              </Typography>\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Population : {country.population}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Latitude, Longitude :{\" \"}\n              {country.latlng[0] + \"째  \" + country.latlng[1] + \"째\"}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            onClick={() => handleGetCapitalWeatherInfo(country)}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            Capital Weather\n          </Button>\n        </CardActions>\n      </Card>\n      {/* review this thing */}\n      {openModal && (\n        <WeatherInfoModal\n          open={openModal}\n          handleClose={handleClose}\n          capitalWeatherInfo={capitalWeatherInfo}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CountryCard;\n"]},"metadata":{},"sourceType":"module"}